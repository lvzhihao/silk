package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set AccountQuerySet

// AccountQuerySet is an queryset type for Account
type AccountQuerySet struct {
	db *gorm.DB
}

// NewAccountQuerySet constructs new AccountQuerySet
func NewAccountQuerySet(db *gorm.DB) AccountQuerySet {
	return AccountQuerySet{
		db: db.Model(&Account{}),
	}
}

func (qs AccountQuerySet) w(db *gorm.DB) AccountQuerySet {
	return NewAccountQuerySet(db)
}

// AccountIdEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) AccountIdEq(accountId string) AccountQuerySet {
	return qs.w(qs.db.Where("account_id = ?", accountId))
}

// AccountIdIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) AccountIdIn(accountId string, accountIdRest ...string) AccountQuerySet {
	iArgs := []interface{}{accountId}
	for _, arg := range accountIdRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("account_id IN (?)", iArgs))
}

// AccountIdNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) AccountIdNe(accountId string) AccountQuerySet {
	return qs.w(qs.db.Where("account_id != ?", accountId))
}

// AccountIdNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) AccountIdNotIn(accountId string, accountIdRest ...string) AccountQuerySet {
	iArgs := []interface{}{accountId}
	for _, arg := range accountIdRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("account_id NOT IN (?)", iArgs))
}

// All is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) All(ret *[]Account) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Account) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtEq(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtGt(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtGte(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtLt(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtLte(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtNe(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Account) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) Delete() error {
	return qs.db.Delete(Account{}).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtEq(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtGt(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtGte(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtIsNotNull() AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtIsNull() AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtLt(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtLte(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtNe(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) GetUpdater() AccountUpdater {
	return NewAccountUpdater(qs.db)
}

// HeadImageEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) HeadImageEq(headImage string) AccountQuerySet {
	return qs.w(qs.db.Where("head_image = ?", headImage))
}

// HeadImageIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) HeadImageIn(headImage string, headImageRest ...string) AccountQuerySet {
	iArgs := []interface{}{headImage}
	for _, arg := range headImageRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("head_image IN (?)", iArgs))
}

// HeadImageNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) HeadImageNe(headImage string) AccountQuerySet {
	return qs.w(qs.db.Where("head_image != ?", headImage))
}

// HeadImageNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) HeadImageNotIn(headImage string, headImageRest ...string) AccountQuerySet {
	iArgs := []interface{}{headImage}
	for _, arg := range headImageRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("head_image NOT IN (?)", iArgs))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDEq(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDGt(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDGte(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDIn(ID uint, IDRest ...uint) AccountQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDLt(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDLte(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDNe(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDNotIn(ID uint, IDRest ...uint) AccountQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) Limit(limit int) AccountQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// MetadataEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MetadataEq(metadata string) AccountQuerySet {
	return qs.w(qs.db.Where("metadata = ?", metadata))
}

// MetadataIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MetadataIn(metadata string, metadataRest ...string) AccountQuerySet {
	iArgs := []interface{}{metadata}
	for _, arg := range metadataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("metadata IN (?)", iArgs))
}

// MetadataNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MetadataNe(metadata string) AccountQuerySet {
	return qs.w(qs.db.Where("metadata != ?", metadata))
}

// MetadataNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MetadataNotIn(metadata string, metadataRest ...string) AccountQuerySet {
	iArgs := []interface{}{metadata}
	for _, arg := range metadataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("metadata NOT IN (?)", iArgs))
}

// NickNameEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) NickNameEq(nickName string) AccountQuerySet {
	return qs.w(qs.db.Where("nick_name = ?", nickName))
}

// NickNameIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) NickNameIn(nickName string, nickNameRest ...string) AccountQuerySet {
	iArgs := []interface{}{nickName}
	for _, arg := range nickNameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("nick_name IN (?)", iArgs))
}

// NickNameNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) NickNameNe(nickName string) AccountQuerySet {
	return qs.w(qs.db.Where("nick_name != ?", nickName))
}

// NickNameNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) NickNameNotIn(nickName string, nickNameRest ...string) AccountQuerySet {
	iArgs := []interface{}{nickName}
	for _, arg := range nickNameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("nick_name NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs AccountQuerySet) One(ret *Account) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByCreatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByDeletedAt() AccountQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByID() AccountQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByStatus is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByStatus() AccountQuerySet {
	return qs.w(qs.db.Order("status ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByUpdatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByCreatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByDeletedAt() AccountQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByID() AccountQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByStatus is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByStatus() AccountQuerySet {
	return qs.w(qs.db.Order("status DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByUpdatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PlatformEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PlatformEq(platform string) AccountQuerySet {
	return qs.w(qs.db.Where("platform = ?", platform))
}

// PlatformIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PlatformIn(platform string, platformRest ...string) AccountQuerySet {
	iArgs := []interface{}{platform}
	for _, arg := range platformRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("platform IN (?)", iArgs))
}

// PlatformNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PlatformNe(platform string) AccountQuerySet {
	return qs.w(qs.db.Where("platform != ?", platform))
}

// PlatformNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PlatformNotIn(platform string, platformRest ...string) AccountQuerySet {
	iArgs := []interface{}{platform}
	for _, arg := range platformRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("platform NOT IN (?)", iArgs))
}

// QrCodeEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) QrCodeEq(qrCode string) AccountQuerySet {
	return qs.w(qs.db.Where("qr_code = ?", qrCode))
}

// QrCodeIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) QrCodeIn(qrCode string, qrCodeRest ...string) AccountQuerySet {
	iArgs := []interface{}{qrCode}
	for _, arg := range qrCodeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("qr_code IN (?)", iArgs))
}

// QrCodeNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) QrCodeNe(qrCode string) AccountQuerySet {
	return qs.w(qs.db.Where("qr_code != ?", qrCode))
}

// QrCodeNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) QrCodeNotIn(qrCode string, qrCodeRest ...string) AccountQuerySet {
	iArgs := []interface{}{qrCode}
	for _, arg := range qrCodeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("qr_code NOT IN (?)", iArgs))
}

// SerialNoEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) SerialNoEq(serialNo string) AccountQuerySet {
	return qs.w(qs.db.Where("serial_no = ?", serialNo))
}

// SerialNoIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) SerialNoIn(serialNo string, serialNoRest ...string) AccountQuerySet {
	iArgs := []interface{}{serialNo}
	for _, arg := range serialNoRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("serial_no IN (?)", iArgs))
}

// SerialNoNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) SerialNoNe(serialNo string) AccountQuerySet {
	return qs.w(qs.db.Where("serial_no != ?", serialNo))
}

// SerialNoNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) SerialNoNotIn(serialNo string, serialNoRest ...string) AccountQuerySet {
	iArgs := []interface{}{serialNo}
	for _, arg := range serialNoRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("serial_no NOT IN (?)", iArgs))
}

// SetAccountId is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetAccountId(accountId string) AccountUpdater {
	u.fields[string(AccountDBSchema.AccountId)] = accountId
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetCreatedAt(createdAt time.Time) AccountUpdater {
	u.fields[string(AccountDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetDeletedAt(deletedAt *time.Time) AccountUpdater {
	u.fields[string(AccountDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetHeadImage is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetHeadImage(headImage string) AccountUpdater {
	u.fields[string(AccountDBSchema.HeadImage)] = headImage
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetID(ID uint) AccountUpdater {
	u.fields[string(AccountDBSchema.ID)] = ID
	return u
}

// SetMetadata is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetMetadata(metadata string) AccountUpdater {
	u.fields[string(AccountDBSchema.Metadata)] = metadata
	return u
}

// SetNickName is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetNickName(nickName string) AccountUpdater {
	u.fields[string(AccountDBSchema.NickName)] = nickName
	return u
}

// SetPlatform is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetPlatform(platform string) AccountUpdater {
	u.fields[string(AccountDBSchema.Platform)] = platform
	return u
}

// SetQrCode is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetQrCode(qrCode string) AccountUpdater {
	u.fields[string(AccountDBSchema.QrCode)] = qrCode
	return u
}

// SetSerialNo is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetSerialNo(serialNo string) AccountUpdater {
	u.fields[string(AccountDBSchema.SerialNo)] = serialNo
	return u
}

// SetStatus is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetStatus(status int32) AccountUpdater {
	u.fields[string(AccountDBSchema.Status)] = status
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetUpdatedAt(updatedAt time.Time) AccountUpdater {
	u.fields[string(AccountDBSchema.UpdatedAt)] = updatedAt
	return u
}

// StatusEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusEq(status int32) AccountQuerySet {
	return qs.w(qs.db.Where("status = ?", status))
}

// StatusGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusGt(status int32) AccountQuerySet {
	return qs.w(qs.db.Where("status > ?", status))
}

// StatusGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusGte(status int32) AccountQuerySet {
	return qs.w(qs.db.Where("status >= ?", status))
}

// StatusIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusIn(status int32, statusRest ...int32) AccountQuerySet {
	iArgs := []interface{}{status}
	for _, arg := range statusRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("status IN (?)", iArgs))
}

// StatusLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusLt(status int32) AccountQuerySet {
	return qs.w(qs.db.Where("status < ?", status))
}

// StatusLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusLte(status int32) AccountQuerySet {
	return qs.w(qs.db.Where("status <= ?", status))
}

// StatusNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusNe(status int32) AccountQuerySet {
	return qs.w(qs.db.Where("status != ?", status))
}

// StatusNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusNotIn(status int32, statusRest ...int32) AccountQuerySet {
	iArgs := []interface{}{status}
	for _, arg := range statusRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("status NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u AccountUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u AccountUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtEq(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtGt(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtGte(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtLt(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtLte(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtNe(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set AccountQuerySet

// ===== BEGIN of Account modifiers

type accountDBSchemaField string

func (f accountDBSchemaField) String() string {
	return string(f)
}

// AccountDBSchema stores db field names of Account
var AccountDBSchema = struct {
	ID        accountDBSchemaField
	CreatedAt accountDBSchemaField
	UpdatedAt accountDBSchemaField
	DeletedAt accountDBSchemaField
	Platform  accountDBSchemaField
	AccountId accountDBSchemaField
	SerialNo  accountDBSchemaField
	NickName  accountDBSchemaField
	HeadImage accountDBSchemaField
	QrCode    accountDBSchemaField
	Status    accountDBSchemaField
	Metadata  accountDBSchemaField
}{

	ID:        accountDBSchemaField("id"),
	CreatedAt: accountDBSchemaField("created_at"),
	UpdatedAt: accountDBSchemaField("updated_at"),
	DeletedAt: accountDBSchemaField("deleted_at"),
	Platform:  accountDBSchemaField("platform"),
	AccountId: accountDBSchemaField("account_id"),
	SerialNo:  accountDBSchemaField("serial_no"),
	NickName:  accountDBSchemaField("nick_name"),
	HeadImage: accountDBSchemaField("head_image"),
	QrCode:    accountDBSchemaField("qr_code"),
	Status:    accountDBSchemaField("status"),
	Metadata:  accountDBSchemaField("metadata"),
}

// Update updates Account fields by primary key
func (o *Account) Update(db *gorm.DB, fields ...accountDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"platform":   o.Platform,
		"account_id": o.AccountId,
		"serial_no":  o.SerialNo,
		"nick_name":  o.NickName,
		"head_image": o.HeadImage,
		"qr_code":    o.QrCode,
		"status":     o.Status,
		"metadata":   o.Metadata,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Account %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// AccountUpdater is an Account updates manager
type AccountUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewAccountUpdater creates new Account updater
func NewAccountUpdater(db *gorm.DB) AccountUpdater {
	return AccountUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Account{}),
	}
}

// ===== END of Account modifiers

// ===== END of all query sets
